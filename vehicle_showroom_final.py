# -*- coding: utf-8 -*-
"""Vehicle Showroom Final.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cOsUn7p57hwq9NsNnBXqbUsdsscvVsch
"""

class Vehicle:

  def __init__(self):
      self._model = input('Enter vehicle model: ')
      self._engine_power = int(input('Enter engine power: '))
      self._tire_size = int(input('Enter vehicle tire size: '))
    
  def display(self): 
    print(f"model: {self._model}, power: {self._engine_power} , tire size: {self._tire_size},", end = " ")    

class NormalVehicle(Vehicle):
  _vehicle_type = "normal"
  def __init__(self):
    Vehicle.__init__(self)
    self._engine_type = input('Enter vehicle engine type ( oil or gas or diesel): ')
  def display(self): 
    Vehicle.display(self)
    print(f"vehicle: {self._vehicle_type}, engine type: {self._engine_type}")  


class SportsVehicle(Vehicle):
  _vehicle_type = "sports"
  _engine_type = "oil"
  def __init__(self):
    Vehicle.__init__(self)
    self._turbo = input('Enter turbo: ')
  def display(self): 
    Vehicle.display(self)
    print(f"vehicle: {self._vehicle_type}, engine type: {self._engine_type}, turbo: {self._turbo} ")     

class HeavyVehicle(Vehicle):
  _engine_type = "diesel"
  _vehicle_type = "heavy"
  def __init__(self):
    Vehicle.__init__(self)
    self._weight = input('Enter weight: ')
  def display(self): 
    Vehicle.display(self)
    print(f"vehicle: {self._vehicle_type}, engine type: {self._engine_type}, weight: {self._weight} ")    

class VehicleShowroom:
  vehicles_list = []
  expected_visitor = 20

  def add_vehicles(self, type):
    if type == "normal":
      self.vehicles_list.append(NormalVehicle())
    elif type == "sports":
      self.vehicles_list.append(SportsVehicle())
      self.expected_visitor += 30
    else:
      self.vehicles_list.append(HeavyVehicle())

  def remove_vehicles(self, model):
    for i in range(len(self.vehicles_list)):
      if(self.vehicles_list[i]._model == model):
        del self.vehicles_list[i]
        break

  def display_vehicles(self):
    for i in range(len(self.vehicles_list)):
      self.vehicles_list[i].display()
    print(f" expected visitor {self.expected_visitor}")

VehicleShowroom = VehicleShowroom()

"""Start"""

while True:

    print('Choice 1: Add Vehicle to showroom')
    print('Choice 2: Remove Vehicle from showroom')
    print('Choice 3: View Current List Of Vehicles')
    print('Choice 4: Quit')
    User_Choice=input('Please Enter your Choice from one of the above options: ')

    if User_Choice== "1":
      print('What is your vehicle type?')
      print('i.Normal Vehicle')
      print('ii. Sports vehicle')
      print('iii.Heavy Vehicle')
      type_choice=input('Enter the type of vehicle: ')

      if type_choice== "i":
        VehicleShowroom.add_vehicles("normal")
      elif type_choice== "ii":
        VehicleShowroom.add_vehicles("sports")
      elif type_choice=="iii":
        VehicleShowroom.add_vehicles("heavy")  
    elif User_Choice== "3":
      VehicleShowroom.display_vehicles()    
    
    elif User_Choice== "2":
      print("Enter model of vehicle to be deleted")
      modell=input()
      VehicleShowroom.remove_vehicles(modell)

    elif User_Choice=="4":
      print('Goodbye')
      break
    else:
      print('Invalid Input')